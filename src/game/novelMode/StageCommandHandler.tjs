// Copyright (C) 2015 Biscrat
FILE_INCLUDE_GUARD

ClassExtends(StageCommandHandler, SpriteCommandHandler)
{
    OverrideFunc(beforeTransition)() {
        super.beforeTransition();
        if (this._fileChanged) {
            this._fileChanged = false;
            this._spriteBack.load(this._getFilename());
        } else if (this._spriteFore.filename != this._spriteBack.filename) {
            this._spriteBack.load(this._spriteFore.filename);
        }
    }



    var _place = "";
    var _time = "";
    var _size = "";
    var _fileChanged = false;
    var _stageAutoTransition = %[
        priority : NovelModeTransPriority_AutoAll,
        type : TransitionType_Crossfade,
        option: %[
            time:1000,
        ]
    ];

    Constructor(mode:NovelMode, parentLayerFore:Layer, parentLayerBack:Layer) {
        checkArgs
        super.SpriteCommandHandler(...);
    }

    Finalize() {
        super.finalize();
        invalidate this._stageAutoTransition;
    }

    OverrideFunc(_createArgumentMethods)() {
        var methods = super._createArgumentMethods();
        methods.place = this._changeFileCommandImpl incontextof %[ self:this, targetName:"_place" ];
        methods.stime = this._changeFileCommandImpl incontextof %[ self:this, targetName:"_time" ];
        methods.size  = this._changeFileCommandImpl incontextof %[ self:this, targetName:"_size" ];
        return methods;
    }

    OverrideFunc(_isIgnoreCommand)(commandInfo:Dictionary) {
        checkArgs
        return commandInfo.name !== "stage";
    }

    Func(_getFilename)() {
        typeNotVoid(this._place)
        typeNotVoid(this._time)
        typeNotVoid(this._size)
        return @"bg${this._place}_${this._time}_${this._size}";
    }

    Func(_changeFileCommandImpl)(value, map, key) {
        var validatedValue = self._validateArgumentRequired(value, key, self[targetName]);
        if (validatedValue === self[targetName]) return;
        self[targetName] = validatedValue;
        self._fileChanged = true;
        return %[ trans : self._stageAutoTransition ];
    }
}
