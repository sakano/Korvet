// Copyright (C) 2015 Biscrat
FILE_INCLUDE_GUARD

ClassExtends(Image, HierarchicalMatrix)
{
    property width {
        getter {
            if (_bitmap === null) {
                assert(false)
                return 0;
            }
            return _bitmap.width;
        }
    }

    property height {
        getter {
            if (_bitmap === null) {
                assert(false)
                return 0;
            }
            return _bitmap.height;
        }
    }

    property redraw {
        getter { return this._redraw; }
    }

    property filename {
        getter { return this._filename; }
    }

    Func(load)(filename:string) {
        checkArgs
        this._filename = filename;

        if (this._bitmap === null) {
            this._bitmap = new Bitmap(filename);
        } else {
            this._bitmap.load(filename);
        }

        this._redraw = true;

        this.resetMatrix();
    }

    Func(clearBitmap)() {
        this.resetMatrix();

        this._filename = "";
        if (this._bitmap !== null) {
            invalidate this._bitmap;
            this._bitmap = null;
        }
        this._redraw = false;
    }

    Func(draw)(dest, force:bool = false) {
        checkArgs
        assert(dest instanceof "Layer" || dest instanceof "Bitmap")
        assert(this._bitmap !== null)
        if (this._redraw || force) {
            this._getMatrix().operateAffine(dest, this._bitmap);
            this._redraw = false;
        }
    }



    var _filename = "";
    var _bitmap = null;
    var _redraw = true;

    Constructor() {
        super.HierarchicalMatrix();
    }

    Finalize() {
        this.clearBitmap();
        super.finalize();
    }

    OverrideFunc(_onParentMatrixUpdated) {
        super._onParentMatrixUpdated();
        this._redraw = true;
    }
}
